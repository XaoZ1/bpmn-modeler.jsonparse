const dict = {
	attrs: {
		definitions: { tagName: 'bpmn:definitions', type: 'bpmn:Definitions' },
		process: { tagName: 'bpmn:process', type: 'bpmn:Process' },
		startEvent: { tagName: 'bpmn:startEvent', type: 'bpmn:StartEvent' },
		endEvent: { tagName: 'bpmn:endEvent', type: 'bpmn:EndEvent' },
		task: { tagName: 'bpmn:task', type: 'bpmn:Task' },
		sequenceFlow: { tagName: 'bpmn:sequenceFlow', type: 'bpmn:SequenceFlow' },
		itemDefinition: { tagName: 'bpmn:itemDefinition', type: 'bpmn:ItemDefinition' },
		diagrams: { tagName: 'bpmndi:BPMNDiagram', type: 'bpmndi:BPMNDiagram' },
		plane: { tagName: 'bpmndi:BPMNPlane', type: 'bpmndi:BPMNPlane' },
		shapes: { tagName: 'bpmndi:BPMNShape', type: 'bpmndi:BPMNShape' },
		edges: { tagName: 'bpmndi:BPMNEdge', type: 'bpmndi:BPMNEdge' },
		bounds: { tagName: 'dc:Bounds', type: 'dc:Bounds' },
		waypoint: { tagName: 'di:waypoint', type: 'dc:Point' },
		extensionElements: { tagName: 'bpmn:extensionElements', type: 'bpmn:ExtensionElements' },
		properties: { tagName: 'bpmn:property', type: 'bpmn:Property' },
		incoming: { tagName: 'bpmn:incoming', type: 'bpmn:Incoming' },
		outgoing: { tagName: 'bpmn:outgoing', type: 'bpmn:Outgoing' },
		intermediateThrowEvent: { tagName: 'bpmn:intermediateThrowEvent', type: 'bpmn:IntermediateThrowEvent' },
		exclusiveGateway: { tagName: 'bpmn:exclusiveGateway', type: 'bpmn:ExclusiveGateway' },
		dataStoreReference: { tagName: 'bpmn:dataStoreReference', type: 'bpmn:DataStoreReference' },
		serviceTask: { tagName: 'bpmn:serviceTask', type: 'bpmn:ServiceTask' },
		userTask: { tagName: 'bpmn:userTask', type: 'bpmn:UserTask' },
		errorEventDefinition: { tagName: 'bpmn:errorEventDefinition', type: 'bpmn:ErrorEventDefinition' },
		boundaryEvent: { tagName: 'bpmn:boundaryEvent', type: 'bpmn:BoundaryEvent' },
		terminateEventDefinition: { tagName: 'bpmn:terminateEventDefinition', type: 'bpmn:TerminateEventDefinition' },
		timerEventDefinition: { tagName: 'bpmn:timerEventDefinition', type: 'bpmn:TimerEventDefinition' },
		sendTask: { tagName: 'bpmn:sendTask', type: 'bpmn:SendTask' },
		eventDefinitions: { tagName: 'bpmn:errorEventDefinition', type: 'bpmn:ErrorEventDefinition' },
		/**自定义扩展 */
		condition: { tagName: 'condition', type: 'condition' },
		orExprs: { tagName: 'orExprs', type: 'orExprs' },
		andExprs: { tagName: 'andExprs', type: 'andExprs' },
		triggers: { tagName: 'triggers', type: 'triggers' },
		participantSetting: { tagName: 'participantSetting', type: 'participantSetting' },
		participantRuleScriptRef: { tagName: 'participantRuleScriptRef', type: 'participantRuleScriptRef' },
		targetScriptRef: { tagName: 'targetScriptRef', type: 'targetScriptRef' },      
		orgRuleList: { tagName: 'orgRuleList', type: 'orgRuleList' },
		multiTaskSetting: { tagName: 'multiTaskSetting', type: 'multiTaskSetting' },   
		finishRuleScriptRef: { tagName: 'finishRuleScriptRef', type: 'finishRuleScriptRef' },
		timeLimitSetting: { tagName: 'timeLimitSetting', type: 'timeLimitSetting' },   
		limitTime: { tagName: 'limitTime', type: 'limitTime' },
		targetLimitValue: { tagName: 'targetLimitValue', type: 'targetLimitValue' },   
		remindTime: { tagName: 'remindTime', type: 'remindTime' },
		freeflowSetting: { tagName: 'freeflowSetting', type: 'freeflowSetting' },      
		targetActivities: { tagName: 'targetActivities', type: 'targetActivities' },   
		userActionSetting: { tagName: 'userActionSetting', type: 'userActionSetting' },userActions: { tagName: 'userActions', type: 'userActions' },
		parameters: { tagName: 'parameters', type: 'parameters' },
		formSetting: { tagName: 'formSetting', type: 'formSetting' },
		targetValue: { tagName: 'targetValue', type: 'targetValue' },
		notifierScope: { tagName: 'notifierScope', type: 'notifierScope' },
		targetActivityValue: { tagName: 'targetActivityValue', type: 'targetActivityValue' },
		targetPersonValue: { tagName: 'targetPersonValue', type: 'targetPersonValue' },targetOrgValue: { tagName: 'targetOrgValue', type: 'targetOrgValue' },
		targetRoleValue: { tagName: 'targetRoleValue', type: 'targetRoleValue' },      
		notifyBasicSetting: { tagName: 'notifyBasicSetting', type: 'notifyBasicSetting' },
		subflowSetting: { tagName: 'subflowSetting', type: 'subflowSetting' },
		targetProcess : { tagName: 'targetProcess ', type: 'targetProcess ' },
		assignmentSetting     : { tagName: 'assignmentSetting     ', type: 'assignmentSetting     ' },
		assignments: { tagName: 'assignments', type: 'assignments' },
		invokeSetting: { tagName: 'invokeSetting', type: 'invokeSetting' },
		operationRefSetting   : { tagName: 'operationRefSetting   ', type: 'operationRefSetting   ' },
		ioSpecification: { tagName: 'ioSpecification', type: 'ioSpecification' },      
		dataInputSet: { tagName: 'dataInputSet', type: 'dataInputSet' },
		dataOutputSet: { tagName: 'dataOutputSet', type: 'dataOutputSet' },
		dataInputAssociations : { tagName: 'dataInputAssociations ', type: 'dataInputAssociations ' },
		dataOutputAssociations: { tagName: 'dataOutputAssociations', type: 'dataOutputAssociations' },
		targetOperation: { tagName: 'targetOperation', type: 'targetOperation' },      
		scriptRefSetting: { tagName: 'scriptRefSetting', type: 'scriptRefSetting' },   
		errorHandleSetting: { tagName: 'errorHandleSetting', type: 'errorHandleSetting' },
		targetNode: { tagName: 'targetNode', type: 'targetNode' }
	},
	enumerable: { // 可枚举属性
		arrModel: ['values', '$children']
	},
	nonEnumerable: { // 不可枚举属性
		objectModel: ['bpmnElement', 'sourceRef', 'targetRef', 'attachedToRef'],
		arrModel: ['incoming', 'outgoing']
	}
}

export default dict